
var http=require('http'),crypto=require('crypto'),_und=require('underscore'),noop=require("./noop"),winston=require('winston');var EventEmitter=require('events').EventEmitter;var DigestWrapper=function(){this.configure();};DigestWrapper.prototype.configure=function(username,password,logger){this.logger=logger;this.nc=1;this.username=username;this.password=password;this.cnonce="0a4f113b";this.nonce=undefined;this.opaque=undefined;this.realm=undefined;this.qop=undefined;this.ended=false;};DigestWrapper.prototype.request=function(options,callback_opt){this.logger.debug("DigestWrapper: in request() for "+options.host+":"+options.port);var digestWrapper=this;var reqWrapper=new RequestWrapper(this.logger);var doRequest=function(){var ncUse=padNC(digestWrapper.nc);digestWrapper.nc++;var realPath=options.path;digestWrapper.logger.debug("----------------------------------------");digestWrapper.logger.debug("options.method: '"+options.method+"'");digestWrapper.logger.debug("options.hostname: '"+options.host+"'");digestWrapper.logger.debug("options.port: '"+options.port+"'");digestWrapper.logger.debug("options.path: '"+options.path+"'");digestWrapper.logger.debug("path: '"+realPath+"'");digestWrapper.logger.debug("cnonce: '"+digestWrapper.cnonce+"'");digestWrapper.logger.debug("nonce: '"+digestWrapper.nonce+"'");digestWrapper.logger.debug("nc: '"+ncUse+"'");digestWrapper.logger.debug("realm: '"+digestWrapper.realm+"'");digestWrapper.logger.debug("qop: '"+digestWrapper.qop+"'");digestWrapper.logger.debug("opaque: '"+digestWrapper.opaque+"'");var md5ha1=crypto.createHash('md5');var ha1raw=digestWrapper.username+":"+digestWrapper.realm+":"+digestWrapper.password;digestWrapper.logger.debug("ha1raw: "+ha1raw);md5ha1.update(ha1raw);var ha1=md5ha1.digest('hex');var md5ha2=crypto.createHash('md5');var ha2raw=options.method+":"+realPath;digestWrapper.logger.debug("ha2raw: "+ha2raw);md5ha2.update(ha2raw);var ha2=md5ha2.digest('hex');var md5r=crypto.createHash('md5');var md5rraw=ha1+":"+digestWrapper.nonce+":"+ncUse+":"+digestWrapper.cnonce+":"+digestWrapper.qop+":"+ha2;digestWrapper.logger.debug("md5rraw: "+md5rraw);md5r.update(md5rraw);var response=md5r.digest('hex');options.headers['Authorization']='Digest username="'+digestWrapper.username+'", realm="'+digestWrapper.realm+'", nonce="'+digestWrapper.nonce+'", uri="'+options.path+'",'+' cnonce="'+digestWrapper.cnonce+'", nc='+ncUse+', qop="'+digestWrapper.qop+'", response="'+response+'", opaque="'+digestWrapper.opaque+'"';digestWrapper.logger.debug("DigestWrapper: Auth header: "+options.headers["Authorization"]);digestWrapper.logger.debug("DigestWrapper: request options: "+JSON.stringify(options));digestWrapper.logger.debug("Calling http request...");var finalReq=http.request(options,(callback_opt||noop));digestWrapper.logger.debug("Returned from http request.");finalReq.on("end",function(res){reqWrapper.doEnd(res);});finalReq.on('error',function(e){digestWrapper.logger.debug('DigestWrapper: finalReq.error: problem with request: '+JSON.stringify(e));reqWrapper.error(e);});reqWrapper.finalReq=finalReq;reqWrapper.finaliseRequest();digestWrapper.logger.debug("DigestWrapper: completed doRequest()");};if(undefined!=this.realm){this.logger.debug("DigestWrapper: Got a Realm");doRequest();}else{this.logger.debug("DigestWrapper: Not got a Realm, wrapping request");var myopts={host:options.host,port:options.port}
var self=this;var get=http.get(myopts,function(res){self.logger.debug("Check: "+res.statusCode);res.on('end',function(){self.logger.debug("DigestWrapper: Got HTTP response: "+res.statusCode);self.logger.debug("DigestWrapper: Header: www-authenticate: "+res.headers["www-authenticate"]);digestWrapper.nc=1;if(403==res.statusCode){var response=new ErrorResponse({statusCode:403});reqWrapper.__response=response;reqWrapper.__callback=callback_opt;reqWrapper.doEnd(response);reqWrapper.finaliseRequest();}else{var auth=res.headers["www-authenticate"];var params=parseDigest(auth);digestWrapper.nonce=params.nonce;digestWrapper.realm=params.realm;digestWrapper.qop=params.qop;digestWrapper.opaque=params.opaque;doRequest();}});});get.on("error",function(e){reqWrapper.error(e);});}
return reqWrapper;};module.exports=function(){return new DigestWrapper();};var RequestWrapper=function(logger){this.logger=logger;this.writeData="";this.emitter=new EventEmitter();this.ended=false;this.finalReq=undefined;this.__response=undefined;this.__callback=undefined;};RequestWrapper.prototype.write=function(data,encoding){this.writeData+=data;};RequestWrapper.prototype.on=function(evt,func){this.emitter.on(evt,func);};RequestWrapper.prototype.end=function(){this.logger.debug("DigestWrapper.end called");this.ended=true;this.finaliseRequest();};RequestWrapper.prototype.error=function(e){this.logger.debug("DigestWrapper.error called");this.ended=true;this.emitter.emit("error",e);};RequestWrapper.prototype.finaliseRequest=function(){this.logger.debug("DigestWrapper.finaliseRequest called");if(this.ended&&this.finalReq!=undefined){if(this.writeData!=undefined&&this.writeData.length>0){this.logger.debug("DigestWrapper: Sending POST data: "+this.writeData);var data=this.writeData;this.writeData=undefined;this.finalReq.write(data);}
this.logger.debug("DigestWrapper.calling finalReq.end ");this.finalReq.end();}
if(this.ended&&this.__response!=undefined){this.logger.debug("DigestWrapper.calling callback with response: "+JSON.stringify(this.__response));var response=this.__response;var cb=this.__callback;this.__response=undefined;this.__callback=undefined;(cb||noop)(response);}};RequestWrapper.prototype.doEnd=function(res){this.logger.debug("DigestWrapper.doEnd: end Called.");this.emitter.emit("end",res);};var ErrorResponse=function(response){this.response=response;this.statusCode=response.statusCode;this.emitter=new EventEmitter();};ErrorResponse.prototype.on=function(evt,callback){this.emitter.on(evt,callback);if(evt=="error"){this.emitter.emit(evt,this.response);}};function parseDigest(header){return _und(header.substring(7).split(/,\s+/)).reduce(function(obj,s){var parts=s.split('=')
obj[parts[0]]=parts[1].replace(/"/g,'')
return obj},{})}
function padNC(num){var pad="";for(var i=0;i<(8-(""+num).length);i++){pad+="0";}
var ret=pad+num;return ret;}