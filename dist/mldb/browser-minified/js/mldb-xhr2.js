
var m=window.mldb||{};var b=m.bindings||{};m.bindings=b;b.xhr2=function(){};b.xhr2.prototype.supportsAdmin=function(){return false;};b.xhr2.prototype.configure=function(username,password,logger){this.username=username;this.password=password;this.logger=logger;};b.xhr2.prototype.request=function(reqname,options,content,callback){var self=this;var ct=options.contentType;if(undefined==ct){ct="application/json";}
var xhr=new XMLHttpRequest();xhr.open(options.method,options.path,true);xhr.setRequestHeader('X-Requested-With','XMLHttpRequest');xhr.setRequestHeader('Content-Type',ct);xhr.onload=function(e){var res={};res.inError=false;res.statusCode=xhr.status;console.log("XHR responseXML: "+xhr.responseXML);console.log("XHR responseText: "+xhr.responseText);console.log("XHR response: "+xhr.response);console.log("XHR typeof responseXML: "+typeof xhr.responseXML);console.log("XHR typeof responseText: "+typeof xhr.responseText);console.log("XHR typeof response: "+typeof xhr.response);if((""+xhr.status).indexOf("2")==0){var wibble;self.logger.debug("Data type: "+(typeof content));self.logger.debug("Data value: "+content);var xml=xhr.responseXML;if(undefined!=xml){res.format="xml";res.doc=xml;}else{self.logger.debug("response text: "+xhr.responseText);try{self.logger.debug("parsing xhr.responseText");wibble=JSON.parse(xhr.responseText);res.format="json";self.logger.debug("js raw: "+wibble);self.logger.debug("json str: "+JSON.stringify(wibble));self.logger.debug("Parsed JSON successfully");}catch(ex){self.logger.debug("JSON parsing failed. Trying XML parsing.");try{wibble=textToXML(xhr.responseText);res.format="xml";}catch(ex2){self.logger.debug("Not JSON or XML. Exception: "+ex2);}}}
res.doc=wibble;}else{console.log("xhr2 error");if(xhr.status==303){res.location=xhr.getResponseHeader("location");}
res.inError=true;res.doc=xhr.responseXML;if(undefined==res.doc){res.doc=xhr.responseText;res.format="text";try{self.logger.debug("parsing xhr.responseText");var wibble=JSON.parse(xhr.responseText);res.format="json";self.logger.debug("js raw: "+wibble);self.logger.debug("json str: "+JSON.stringify(wibble));self.logger.debug("Parsed JSON successfully");res.doc=wibble;}catch(ex){self.logger.debug("Exception: "+ex);}}else{res.format="xml";}
res.details=res.doc;if("string"==typeof res.details){res.details=textToXML(res.details);}
if(undefined!=res.details.nodeType){res.details=xmlToJson(res.details);}}
callback(res);};xhr.send(content);};